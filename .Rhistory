getSummarizedWeather("KNYNEWYO639", "2016-07-01", end_date="2018-10-19", station_type="id",
opt_custom_columns=T,
custom_columns= 1:17)
getSummarizedWeather("KNYNEWYO639", "2015-07-01", end_date="2018-10-19", station_type="id",
opt_custom_columns=T,
custom_columns= 1:17)
getSummarizedWeather("KNYNEWYO639", "2014-07-01", end_date="2018-10-19", station_type="id",
opt_custom_columns=T,
custom_columns= 1:17)
getSummarizedWeather("KNYNEWYO639", "2012-07-01", end_date="2018-10-19", station_type="id",
opt_custom_columns=T,
custom_columns= 1:17)
weather = getSummarizedWeather("KNYNEWYO639", "2012-07-01", end_date="2018-10-19", station_type="id",
opt_custom_columns=T,
custom_columns= 1:17)
View(weather)
head(data,10)
head(data)
library(shiny)
library(data.table)
library(dplyr)
library(tidyr)
library(ggplot2)
Data <- fread("New_data.csv")
head(data)
head(Data,10)
Data[Data['DATE']> "07/03/2016"]
Data[Data['DATE']> 07/03/2016]
View(weather)
View(weather)
temp = read.table('https://s3.amazonaws.com/graderdata/Temp.txt', header = TRUE)
#1a Example numerical EDA.
summary(temp)
# We can also use str(),dim(),nrow(),ncol() to know the dataset
sd(temp$Body.Temp)
sd(temp$Heart.Rate)
# use sapply: sapply(temp, sd)
cor(temp$Body.Temp, temp$Heart.Rate) # Bivariate methods
temp = read.table('https://s3.amazonaws.com/graderdata/Temp.txt', header = TRUE)
summary(temp)
sd(temp$Body.Temp)
sd(temp$Heart.Rate)
cor(temp$Body.Temp, temp$Heart.Rate)
hist(temp$Body.Temp, prob = T)
lines(density(temp$Body.Temp), col = "red")
hist(temp$Heart.Rate, prob = TRUE)
lines(density(temp$Heart.Rate), col = "red")
# density plot
plot(density(temp$Body.Temp[temp$Gender == "Female"]), col = "pink")
lines(density(temp$Body.Temp[temp$Gender == "Male"]), col = "blue")
plot(density(temp$Heart.Rate[temp$Gender == "Male"]), col = "blue")
lines(density(temp$Heart.Rate[temp$Gender == "Female"]), col = "pink")
plot(temp$Body.Temp, temp$Heart.Rate, col = temp$Gender)
t.test(temp$Body.Temp, mu = 98.6, alternative = "two.sided")
t.test(temp$Body.Temp[temp$Gender == "Female"],
temp$Body.Temp[temp$Gender == "Male"],
alternative = "two.sided")
t.test(temp$Body.Temp ~ temp$Gender, alternative = "two.sided")
library(dplyr)
Ma = temp %>% filter(Gender == 'Male')
Fe = temp %>% filter(Gender == 'Female')
avg = numeric()
for(s in 1:10000){
male = sample(Ma$Body.Temp, 65, replace=T)
female = sample(Fe$Body.Temp, 65, replace=T)
avg[s] = mean(female-male)
}
lower_bnd = mean(avg) - 2*sd(avg)
upper_bnd = mean(avg) + 2*sd(avg)
var.test(temp$Heart.Rate[temp$Gender == "Female"],
temp$Heart.Rate[temp$Gender == "Male"],
alternative = "less")
var.test(temp$Heart.Rate[temp$Gender == "Female"],
temp$Heart.Rate[temp$Gender == "Male"],
alternative = "greater")
library(ggplot2)
library(datasets)
boxplot(weight ~ group, data = PlantGrowth)
boxplot(weight ~ group, data = PlantGrowth)
sd(PlantGrowth$weight[PlantGrowth$group == "ctrl"])
sd(PlantGrowth$weight[PlantGrowth$group == "trt1"])
sd(PlantGrowth$weight[PlantGrowth$group == "trt2"])
ggplot(PlantGrowth, aes(x = group, y = weight))+
geom_boxplot(color = c("red", "blue", "green"))
bartlett.test(PlantGrowth$weight ~ PlantGrowth$group)
summary(aov(weight ~ group, data = PlantGrowth))
library(ggplot2)
library(datasets)
boxplot(weight ~ group, data = PlantGrowth)
summary(aov(weight ~ group, data = PlantGrowth))
str(HairEyeColor)
mosaicplot(HairEyeColor, shade = TRUE)
new_data = HairEyeColor[,1:2,2]
mosaicplot(HairEyeColor[,1:2,2], shade = TRUE)
mosaicplot(new_data, shade = TRUE)
new_data.test = chisq.test(new_data)
new_data.test
(new_data.test$observed - new_data.test$expected)^2/new_data.test$expected
new_data.test$observed - new_data.test$expected
shiny::runApp('C:/Users/patel/OneDrive/Desktop/NYPD_accidents_shiny-master/NYPD_accidents_shiny-master')
runApp('C:/Users/patel/OneDrive/Desktop/NYPD_accidents_shiny-master/NYPD_accidents_shiny-master')
runApp('C:/Users/patel/OneDrive/Desktop/NYPD_accidents_shiny-master/NYPD_accidents_shiny-master')
runApp('C:/Users/patel/OneDrive/Desktop/NYPD_accidents_shiny-master/NYPD_accidents_shiny-master')
runApp('C:/Users/patel/OneDrive/Desktop/NYPD_accidents_shiny-master/NYPD_accidents_shiny-master')
runApp('C:/Users/patel/OneDrive/Desktop/NYPD_accidents_shiny-master/NYPD_accidents_shiny-master')
runApp('C:/Users/patel/OneDrive/Desktop/NYPD_accidents_shiny-master/NYPD_accidents_shiny-master')
runApp('C:/Users/patel/OneDrive/Desktop/NYPD_accidents_shiny-master/NYPD_accidents_shiny-master')
runApp('C:/Users/patel/OneDrive/Desktop/NYPD_accidents_shiny-master/NYPD_accidents_shiny-master')
runApp('C:/Users/patel/OneDrive/Desktop/NYPD_accidents_shiny-master/NYPD_accidents_shiny-master')
runApp('C:/Users/patel/OneDrive/Desktop/NYPD_accidents_shiny-master/NYPD_accidents_shiny-master')
shiny::runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
shiny::runApp('shiny classes/shinyApps/shinyApps/leaflet_demo')
library("leaflet", lib.loc="~/R/win-library/3.5")
</script>
</head>
<body>
<div id="chart_div" style="width: 900px; height: 500px;"></div>
</body>
</html>
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
load("C:/Users/patel/OneDrive/Desktop/Exploratory-Visualization-Shiny-Project-master/Exploratory-Visualization-Shiny-Project-master/data/moto1.rda")
View(moto1)
shiny::runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
shiny::runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
View(vehicle_data)
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
shiny::runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
?icon
install.packages("font-awesome")
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
shiny::runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
?radioButtons
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
library(shiny)
runExample("06_tabsets")
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
library(shiny)
runExample("06_tabsets")
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
library(shiny)
runExample("06_tabsets")
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
output$hist <- renderGvis({
gvisHistogram(state_stat[,input$selected, drop=FALSE])
output$hist <- renderGvis({
gvisHistogram(state_stat[,input$selected, drop=FALSE])
})
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
?addCircleMarkers
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
final<- read.csv('final_.csv')
final<- read.csv('final_.csv')
library(readr)
final_ <- read_csv("C:/Users/patel/OneDrive/Desktop/final_.csv")
View(final_)
library(dplyr)
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
shiny::runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
?datatable
runExample(3)
runExample("02_text")
library(shiny)
runExample("02_text")
?runExample
install.packages("fst")
library("fst", lib.loc="~/R/win-library/3.5")
??`fst-package`
shiny::runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
shiny::runApp('NYC')
runApp('NYC')
runApp('NYC')
runApp('NYC')
runApp('NYC')
runApp('NYC')
?popupOptions
runApp('NYC')
runApp('NYC')
leaflet(Andrew) %>%
addProviderTiles("Esri.WorldStreetMap") %>%
setView(lng = -73.97, lat = 40.75, zoom = 11)%>%
addTiles() %>%
addPopups( lng =-73.97, lat =40.75,content,options = popupOptions(maxWidth = 300, minWidth = 50, maxHeight = NULL,
autoPan = TRUE, keepInView = FALSE, closeButton = TRUE,
zoomAnimation = TRUE, closeOnClick = TRUE))
runApp('NYC')
runApp('NYC')
runApp('NYC')
runApp('NYC')
runApp('NYC')
runApp('NYC')
runApp('NYC')
runApp('NYC')
runApp('NYC')
runApp('NYC')
runApp('NYC')
runApp('NYC')
runApp('NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('NYC')
setwd("C:/Users/patel/OneDrive/Desktop/NYC")
runApp()
runApp()
today = read.csv('sample1.csv')
today = read.csv('data/sample1.csv')
today%>%mutate(NUMBER.OF.ACCIDENT = NUMBER.OF.PERSONS.INJURED + NUMBER.OF.PERSONS.KILLED)
colnames(today)
today = today%>%mutate(NUMBER.OF.ACCIDENT = NUMBER.OF.PERSONS.INJURED + NUMBER.OF.PERSONS.KILLED)
colnames(today)
write.csv(today, file = 'sample1.csv')
vehicle_data <- read.csv('data/sample1.csv', stringsAsFactors = FALSE)
View(vehicle_data)
runApp()
runApp()
runApp()
runApp()
runApp()
?geom_text
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/NYC')
runApp()
?navbarPage
runApp()
runApp()
runApp()
install.packages("bootstrap")
library("bootstrap", lib.loc="~/R/win-library/3.5")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?geom_point
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("ggthemr")
library(devtools)
devtools::install_github('cttobin/ggthemr')
runApp()
runApp()
runApp()
runApp()
runApp()
shinyUI(navbarPage("NYPD COLLISIONS", id="nav",theme = "styles.css",
tabPanel("Graph",icon = icon("signal"),
tabBox(tabName = "plot1",
fluidRow(box(
plotOutput("plot1",height = 650),
width = 12)))
)
)
)
runApp()
runApp()
runApp()
runApp()
?absolutePanel
runApp()
runApp()
runApp('~/NYC')
runApp('~/NYC')
setwd("~/NYC")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp()
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
vehicle_data %>% group_by(BOROUGH) %>% arrange(BOROUGH) %>%
summarise(NUMBER.OF.ACCIDENT = n()) %>%
ggplot(aes(x = BOROUGH,y = NUMBER.OF.ACCIDENT )) +
geom_line(aes(color = "Accidents")) +
geom_point(show.legend = TRUE,size = 5, color = 'green') +
geom_text(aes(label = NUMBER.OF.ACCIDENT),vjust =-1) +
labs(title = 'NYC Motor Vehicle Collisions 2012 - 2018',x = 'Year', y = 'Number of Accidents') +
theme(plot.title = element_text(hjust = 0.5))
vehicle_data %>% group_by(BOROUGH) %>% arrange(BOROUGH) %>%
summarise(NUMBER.OF.ACCIDENT = n()) %>%
ggplot(aes(x = BOROUGH,y = NUMBER.OF.ACCIDENT )) +
geom_line(aes(color = "Accidents")) +
geom_point(show.legend = TRUE,size = 5, color = 'red') +
geom_text(aes(label = NUMBER.OF.ACCIDENT),vjust =-1) +
labs(title = 'NYC Motor Vehicle Collisions 2012 - 2018',x = 'Year', y = 'Number of Accidents') +
theme(plot.title = element_text(hjust = 0.5))
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
shinyUI(navbarPage("NYPD COLLISIONS", id="nav",theme = "styles.css",
tabPanel("Graph",icon = icon("signal"),
menuSubItem("Collision by Year",tabName = "plot1", icon = icon("line-chart")),
menuSubItem("Collision by Borough",tabName = "plot7", icon = icon("bar-chart")),
menuSubItem("Collision by Day",tabName = "plot2", icon = icon("bar-chart")),
menuSubItem("Collision by Hour",tabName = "plot3", icon = icon("area-chart")),
menuSubItem("Contributing Factor", tabName = "plot4", icon = icon("area-chart")),
menuSubItem("Are pedestrians safe?", tabName = "plot5", icon = icon("line-chart")),
menuSubItem("Factor affecting Injury", tabName = "plot6", icon = icon("line-chart"))
#                            absolutePanel(id = "controls", class = "panel panel-default", fixed = TRUE, draggable = TRUE,
#                                         top = 80, left = 20, right = 'auto', bottom = "auto",
#                                        width = 320, height = "auto",
#
#                                      selectizeInput("graph",
#                                                    "SELECT GRAPH",
#                                                   c('Collisions by Accidents','Collisions by Year','Collisions by Weather Type'))
),
dashboardBody(
tags$head(
tags$link(rel = "stylesheet", type = "text/css", href = "custom.css")
),
tabItems(
tabItem(tabName = "map",
fluidRow(box(
leafletOutput("map",
height = 650),
width = 12))),
tabItem(tabName = "heatmap1",
fluidRow(box(
leafletOutput("heatmap",height = 800),
width = 12))),
tabItem(tabName = "data",
fluidRow(box(DT::dataTableOutput("table"), width = 16))),
tabItem(tabName = "plot1",
fluidRow(box(
plotOutput("plot1",height = 650),
width = 12))),
tabItem(tabName = "plot2",
fluidRow(box(
plotOutput("plot2",height = 650),
width = 12))),
tabItem(tabName = "plot3",
fluidRow(box(
plotOutput("plot3",height = 650),
width = 12))),
tabItem(tabName = "plot4",
fluidRow(box(
plotOutput("plot4",height = 650),
width = 12))),
tabItem(tabName = "plot5",
fluidRow(box(
plotOutput("plot5",height = 650),
width = 12))),
tabItem(tabName = "plot6",
fluidRow(box(
plotOutput("plot6",height = 650),
width = 12))),
tabItem(tabName = "plot7",
fluidRow(box(
plotOutput("plot7",height = 650),
width = 12)))
)
)
))
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp('C:/Users/patel/OneDrive/Desktop/NYC')
runApp()
runApp()
runApp()
shiny::runApp()
